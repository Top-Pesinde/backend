name: 🚀 Deploy to Production

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: '18'

jobs:
  build:
    name: 🔨 Build Project
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'api/package-lock.json'

      - name: 📦 Install Dependencies
        working-directory: ./api
        run: npm ci --only=production

      - name: 🔨 Build Project
        working-directory: ./api
        run: npm run build

      - name: 🗄️ Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-and-modules
          path: |
            api/dist/
            api/node_modules/
            api/package.json
            api/package-lock.json
            api/ecosystem.config.js
            api/prisma/

  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: 📥 Download production artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-and-modules
          path: .

      - name: 🚚 Transfer files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "api/dist/,api/node_modules/,api/package.json,api/package-lock.json,api/ecosystem.config.js,api/prisma/"
          target: "/var/www/backend-api-prod"
          strip_components: 1

      - name: 🔄 Restart application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /var/www/backend-api-prod
            npx prisma migrate deploy
            pm2 reload ecosystem.config.js --env production