{
    "name": "express-api-services",
    "version": "1.0.0",
    "description": "Express.js API with TypeScript and Services Architecture",
    "main": "dist/index.js",
    "scripts": {
        "start": "node dist/index.js",
        "dev": "nodemon src/index.ts",
        "build": "prisma generate && tsc",
        "watch": "tsc -w",
        "clean": "rimraf dist",
        "test": "jest",
        "test:watch": "jest --watch",
        "test:coverage": "jest --coverage",
        "test:unit": "jest --testPathPattern=\"unit\"",
        "test:integration": "jest --testPathPattern=\"integration\"",
        "test:ci": "jest --coverage --watchAll=false --passWithNoTests",
        "lint": "eslint src/**/*.ts",
        "lint:fix": "eslint src/**/*.ts --fix",
        "format": "prettier --write src/**/*.ts",
        "format:check": "prettier --check src/**/*.ts",
        "db:generate": "prisma generate",
        "db:push": "prisma db push",
        "db:migrate": "prisma migrate dev",
        "db:studio": "prisma studio",
        "db:seed": "ts-node prisma/seed.ts",
        "setup:remote": "./scripts/setup-remote.sh",
        "setup:local": "cp .env.example .env",
        "services:start": "docker-compose up -d",
        "services:start:remote": "./scripts/start-remote-services.sh",
        "services:stop": "docker-compose down",
        "services:stop:remote": "docker-compose -f docker-compose.remote.yml down",
        "minio:console": "echo 'MinIO Console: http://localhost:9001 (local) or http://YOUR_SERVER_IP:9001 (remote)'",
        "server:ip": "./scripts/get-server-ip.sh",
        "server:firewall": "./scripts/setup-firewall.sh",
        "server:check": "./scripts/check-remote-services.sh",
        "remote:start": "./scripts/start-all-remote.sh"
    },
    "prisma": {
        "seed": "ts-node prisma/seed.ts"
    },
    "keywords": [
        "express",
        "typescript",
        "api",
        "services"
    ],
    "author": "",
    "license": "MIT",
    "dependencies": {
        "@prisma/client": "^5.7.1",
        "@types/socket.io": "3.0.2",
        "bcryptjs": "^2.4.3",
        "cors": "^2.8.5",
        "dotenv": "^16.3.1",
        "expo-server-sdk": "3.15.0",
        "express": "^4.18.2",
        "express-rate-limit": "^7.1.5",
        "helmet": "^7.1.0",
        "jsonwebtoken": "^9.0.2",
        "minio": "^7.1.3",
        "multer": "^1.4.5-lts.1",
        "nodemailer": "^7.0.3",
        "prom-client": "^15.1.3",
        "socket.io": "4.8.1"
    },
    "devDependencies": {
        "@types/bcryptjs": "^2.4.6",
        "@types/cors": "^2.8.17",
        "@types/express": "^4.17.21",
        "@types/jest": "^30.0.0",
        "@types/jsonwebtoken": "^9.0.5",
        "@types/minio": "^7.1.1",
        "@types/multer": "^1.4.11",
        "@types/node": "^20.10.5",
        "@types/nodemailer": "^6.4.17",
        "@types/supertest": "^6.0.3",
        "@typescript-eslint/eslint-plugin": "^6.21.0",
        "@typescript-eslint/parser": "^6.21.0",
        "eslint": "^8.56.0",
        "jest": "^30.0.3",
        "nodemon": "^3.0.2",
        "prettier": "^3.1.1",
        "prisma": "^5.7.1",
        "rimraf": "^5.0.5",
        "supertest": "^7.1.1",
        "ts-jest": "^29.4.0",
        "ts-node": "^10.9.2",
        "typescript": "^5.3.3"
    }
}
